// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Struct.proto

#ifndef PROTOBUF_Struct_2eproto__INCLUDED
#define PROTOBUF_Struct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Message.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Struct_2eproto();
void protobuf_AssignDesc_Struct_2eproto();
void protobuf_ShutdownFile_Struct_2eproto();

class LOGIN;
class CHAT;
class MOVE;
class STOP;
class LOGIN_RESULT;
class POSITION;
class OBJECT_APPEAR;
class MAP_ENTER;

// ===================================================================

class LOGIN : public ::google::protobuf::Message {
 public:
  LOGIN();
  virtual ~LOGIN();

  LOGIN(const LOGIN& from);

  inline LOGIN& operator=(const LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOGIN& default_instance();

  void Swap(LOGIN* other);

  // implements Message ----------------------------------------------

  LOGIN* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOGIN& from);
  void MergeFrom(const LOGIN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required string pw = 2;
  inline bool has_pw() const;
  inline void clear_pw();
  static const int kPwFieldNumber = 2;
  inline const ::std::string& pw() const;
  inline void set_pw(const ::std::string& value);
  inline void set_pw(const char* value);
  inline void set_pw(const char* value, size_t size);
  inline ::std::string* mutable_pw();
  inline ::std::string* release_pw();
  inline void set_allocated_pw(::std::string* pw);

  // @@protoc_insertion_point(class_scope:LOGIN)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pw();
  inline void clear_has_pw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;
  ::std::string* pw_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Struct_2eproto();
  friend void protobuf_AssignDesc_Struct_2eproto();
  friend void protobuf_ShutdownFile_Struct_2eproto();

  void InitAsDefaultInstance();
  static LOGIN* default_instance_;
};
// -------------------------------------------------------------------

class CHAT : public ::google::protobuf::Message {
 public:
  CHAT();
  virtual ~CHAT();

  CHAT(const CHAT& from);

  inline CHAT& operator=(const CHAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CHAT& default_instance();

  void Swap(CHAT* other);

  // implements Message ----------------------------------------------

  CHAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CHAT& from);
  void MergeFrom(const CHAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  inline ::std::string* release_msg();
  inline void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:CHAT)
 private:
  inline void set_has_msg();
  inline void clear_has_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Struct_2eproto();
  friend void protobuf_AssignDesc_Struct_2eproto();
  friend void protobuf_ShutdownFile_Struct_2eproto();

  void InitAsDefaultInstance();
  static CHAT* default_instance_;
};
// -------------------------------------------------------------------

class MOVE : public ::google::protobuf::Message {
 public:
  MOVE();
  virtual ~MOVE();

  MOVE(const MOVE& from);

  inline MOVE& operator=(const MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MOVE& default_instance();

  void Swap(MOVE* other);

  // implements Message ----------------------------------------------

  MOVE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MOVE& from);
  void MergeFrom(const MOVE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:MOVE)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Struct_2eproto();
  friend void protobuf_AssignDesc_Struct_2eproto();
  friend void protobuf_ShutdownFile_Struct_2eproto();

  void InitAsDefaultInstance();
  static MOVE* default_instance_;
};
// -------------------------------------------------------------------

class STOP : public ::google::protobuf::Message {
 public:
  STOP();
  virtual ~STOP();

  STOP(const STOP& from);

  inline STOP& operator=(const STOP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const STOP& default_instance();

  void Swap(STOP* other);

  // implements Message ----------------------------------------------

  STOP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const STOP& from);
  void MergeFrom(const STOP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:STOP)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Struct_2eproto();
  friend void protobuf_AssignDesc_Struct_2eproto();
  friend void protobuf_ShutdownFile_Struct_2eproto();

  void InitAsDefaultInstance();
  static STOP* default_instance_;
};
// -------------------------------------------------------------------

class LOGIN_RESULT : public ::google::protobuf::Message {
 public:
  LOGIN_RESULT();
  virtual ~LOGIN_RESULT();

  LOGIN_RESULT(const LOGIN_RESULT& from);

  inline LOGIN_RESULT& operator=(const LOGIN_RESULT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LOGIN_RESULT& default_instance();

  void Swap(LOGIN_RESULT* other);

  // implements Message ----------------------------------------------

  LOGIN_RESULT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LOGIN_RESULT& from);
  void MergeFrom(const LOGIN_RESULT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LOGIN_RESULT)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Struct_2eproto();
  friend void protobuf_AssignDesc_Struct_2eproto();
  friend void protobuf_ShutdownFile_Struct_2eproto();

  void InitAsDefaultInstance();
  static LOGIN_RESULT* default_instance_;
};
// -------------------------------------------------------------------

class POSITION : public ::google::protobuf::Message {
 public:
  POSITION();
  virtual ~POSITION();

  POSITION(const POSITION& from);

  inline POSITION& operator=(const POSITION& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const POSITION& default_instance();

  void Swap(POSITION* other);

  // implements Message ----------------------------------------------

  POSITION* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const POSITION& from);
  void MergeFrom(const POSITION& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);

  // required float z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline float z() const;
  inline void set_z(float value);

  // @@protoc_insertion_point(class_scope:POSITION)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float x_;
  float y_;
  float z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Struct_2eproto();
  friend void protobuf_AssignDesc_Struct_2eproto();
  friend void protobuf_ShutdownFile_Struct_2eproto();

  void InitAsDefaultInstance();
  static POSITION* default_instance_;
};
// -------------------------------------------------------------------

class OBJECT_APPEAR : public ::google::protobuf::Message {
 public:
  OBJECT_APPEAR();
  virtual ~OBJECT_APPEAR();

  OBJECT_APPEAR(const OBJECT_APPEAR& from);

  inline OBJECT_APPEAR& operator=(const OBJECT_APPEAR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OBJECT_APPEAR& default_instance();

  void Swap(OBJECT_APPEAR* other);

  // implements Message ----------------------------------------------

  OBJECT_APPEAR* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OBJECT_APPEAR& from);
  void MergeFrom(const OBJECT_APPEAR& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OBJECT_APPEAR)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Struct_2eproto();
  friend void protobuf_AssignDesc_Struct_2eproto();
  friend void protobuf_ShutdownFile_Struct_2eproto();

  void InitAsDefaultInstance();
  static OBJECT_APPEAR* default_instance_;
};
// -------------------------------------------------------------------

class MAP_ENTER : public ::google::protobuf::Message {
 public:
  MAP_ENTER();
  virtual ~MAP_ENTER();

  MAP_ENTER(const MAP_ENTER& from);

  inline MAP_ENTER& operator=(const MAP_ENTER& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MAP_ENTER& default_instance();

  void Swap(MAP_ENTER* other);

  // implements Message ----------------------------------------------

  MAP_ENTER* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MAP_ENTER& from);
  void MergeFrom(const MAP_ENTER& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float speed = 1;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 1;
  inline float speed() const;
  inline void set_speed(float value);

  // @@protoc_insertion_point(class_scope:MAP_ENTER)
 private:
  inline void set_has_speed();
  inline void clear_has_speed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float speed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Struct_2eproto();
  friend void protobuf_AssignDesc_Struct_2eproto();
  friend void protobuf_ShutdownFile_Struct_2eproto();

  void InitAsDefaultInstance();
  static MAP_ENTER* default_instance_;
};
// ===================================================================


// ===================================================================

// LOGIN

// required string id = 1;
inline bool LOGIN::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOGIN::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOGIN::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOGIN::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& LOGIN::id() const {
  return *id_;
}
inline void LOGIN::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void LOGIN::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void LOGIN::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LOGIN::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* LOGIN::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LOGIN::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string pw = 2;
inline bool LOGIN::has_pw() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LOGIN::set_has_pw() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LOGIN::clear_has_pw() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LOGIN::clear_pw() {
  if (pw_ != &::google::protobuf::internal::kEmptyString) {
    pw_->clear();
  }
  clear_has_pw();
}
inline const ::std::string& LOGIN::pw() const {
  return *pw_;
}
inline void LOGIN::set_pw(const ::std::string& value) {
  set_has_pw();
  if (pw_ == &::google::protobuf::internal::kEmptyString) {
    pw_ = new ::std::string;
  }
  pw_->assign(value);
}
inline void LOGIN::set_pw(const char* value) {
  set_has_pw();
  if (pw_ == &::google::protobuf::internal::kEmptyString) {
    pw_ = new ::std::string;
  }
  pw_->assign(value);
}
inline void LOGIN::set_pw(const char* value, size_t size) {
  set_has_pw();
  if (pw_ == &::google::protobuf::internal::kEmptyString) {
    pw_ = new ::std::string;
  }
  pw_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LOGIN::mutable_pw() {
  set_has_pw();
  if (pw_ == &::google::protobuf::internal::kEmptyString) {
    pw_ = new ::std::string;
  }
  return pw_;
}
inline ::std::string* LOGIN::release_pw() {
  clear_has_pw();
  if (pw_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = pw_;
    pw_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void LOGIN::set_allocated_pw(::std::string* pw) {
  if (pw_ != &::google::protobuf::internal::kEmptyString) {
    delete pw_;
  }
  if (pw) {
    set_has_pw();
    pw_ = pw;
  } else {
    clear_has_pw();
    pw_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CHAT

// required string msg = 1;
inline bool CHAT::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CHAT::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CHAT::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CHAT::clear_msg() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    msg_->clear();
  }
  clear_has_msg();
}
inline const ::std::string& CHAT::msg() const {
  return *msg_;
}
inline void CHAT::set_msg(const ::std::string& value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CHAT::set_msg(const char* value) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void CHAT::set_msg(const char* value, size_t size) {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CHAT::mutable_msg() {
  set_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    msg_ = new ::std::string;
  }
  return msg_;
}
inline ::std::string* CHAT::release_msg() {
  clear_has_msg();
  if (msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_;
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CHAT::set_allocated_msg(::std::string* msg) {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (msg) {
    set_has_msg();
    msg_ = msg;
  } else {
    clear_has_msg();
    msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// MOVE

// required float x = 1;
inline bool MOVE::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MOVE::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MOVE::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MOVE::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float MOVE::x() const {
  return x_;
}
inline void MOVE::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool MOVE::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MOVE::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MOVE::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MOVE::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float MOVE::y() const {
  return y_;
}
inline void MOVE::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 3;
inline bool MOVE::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MOVE::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MOVE::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MOVE::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float MOVE::z() const {
  return z_;
}
inline void MOVE::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// STOP

// -------------------------------------------------------------------

// LOGIN_RESULT

// required int32 result = 1;
inline bool LOGIN_RESULT::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LOGIN_RESULT::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LOGIN_RESULT::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LOGIN_RESULT::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 LOGIN_RESULT::result() const {
  return result_;
}
inline void LOGIN_RESULT::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// POSITION

// required float x = 1;
inline bool POSITION::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void POSITION::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void POSITION::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void POSITION::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float POSITION::x() const {
  return x_;
}
inline void POSITION::set_x(float value) {
  set_has_x();
  x_ = value;
}

// required float y = 2;
inline bool POSITION::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void POSITION::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void POSITION::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void POSITION::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float POSITION::y() const {
  return y_;
}
inline void POSITION::set_y(float value) {
  set_has_y();
  y_ = value;
}

// required float z = 3;
inline bool POSITION::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void POSITION::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void POSITION::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void POSITION::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline float POSITION::z() const {
  return z_;
}
inline void POSITION::set_z(float value) {
  set_has_z();
  z_ = value;
}

// -------------------------------------------------------------------

// OBJECT_APPEAR

// required int32 uid = 1;
inline bool OBJECT_APPEAR::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OBJECT_APPEAR::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OBJECT_APPEAR::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OBJECT_APPEAR::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 OBJECT_APPEAR::uid() const {
  return uid_;
}
inline void OBJECT_APPEAR::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
}

// -------------------------------------------------------------------

// MAP_ENTER

// required float speed = 1;
inline bool MAP_ENTER::has_speed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MAP_ENTER::set_has_speed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MAP_ENTER::clear_has_speed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MAP_ENTER::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline float MAP_ENTER::speed() const {
  return speed_;
}
inline void MAP_ENTER::set_speed(float value) {
  set_has_speed();
  speed_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Struct_2eproto__INCLUDED
