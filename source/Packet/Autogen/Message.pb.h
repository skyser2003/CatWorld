// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_Message_2eproto__INCLUDED
#define PROTOBUF_Message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Message_2eproto();
void protobuf_AssignDesc_Message_2eproto();
void protobuf_ShutdownFile_Message_2eproto();

class Packet;

enum Packet_Message {
  Packet_Message_LOGIN = 1,
  Packet_Message_CHAT = 2,
  Packet_Message_MOVE = 3,
  Packet_Message_STOP = 4,
  Packet_Message_LOGIN_RESULT = 1001,
  Packet_Message_POSITION = 1002,
  Packet_Message_OBJECT_APPEAR = 1003,
  Packet_Message_MAP_ENTER = 1004
};
bool Packet_Message_IsValid(int value);
const Packet_Message Packet_Message_Message_MIN = Packet_Message_LOGIN;
const Packet_Message Packet_Message_Message_MAX = Packet_Message_MAP_ENTER;
const int Packet_Message_Message_ARRAYSIZE = Packet_Message_Message_MAX + 1;

const ::google::protobuf::EnumDescriptor* Packet_Message_descriptor();
inline const ::std::string& Packet_Message_Name(Packet_Message value) {
  return ::google::protobuf::internal::NameOfEnum(
    Packet_Message_descriptor(), value);
}
inline bool Packet_Message_Parse(
    const ::std::string& name, Packet_Message* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Packet_Message>(
    Packet_Message_descriptor(), name, value);
}
// ===================================================================

class Packet : public ::google::protobuf::Message {
 public:
  Packet();
  virtual ~Packet();

  Packet(const Packet& from);

  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Packet& default_instance();

  void Swap(Packet* other);

  // implements Message ----------------------------------------------

  Packet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Packet& from);
  void MergeFrom(const Packet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Packet_Message Message;
  static const Message LOGIN = Packet_Message_LOGIN;
  static const Message CHAT = Packet_Message_CHAT;
  static const Message MOVE = Packet_Message_MOVE;
  static const Message STOP = Packet_Message_STOP;
  static const Message LOGIN_RESULT = Packet_Message_LOGIN_RESULT;
  static const Message POSITION = Packet_Message_POSITION;
  static const Message OBJECT_APPEAR = Packet_Message_OBJECT_APPEAR;
  static const Message MAP_ENTER = Packet_Message_MAP_ENTER;
  static inline bool Message_IsValid(int value) {
    return Packet_Message_IsValid(value);
  }
  static const Message Message_MIN =
    Packet_Message_Message_MIN;
  static const Message Message_MAX =
    Packet_Message_Message_MAX;
  static const int Message_ARRAYSIZE =
    Packet_Message_Message_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Message_descriptor() {
    return Packet_Message_descriptor();
  }
  static inline const ::std::string& Message_Name(Message value) {
    return Packet_Message_Name(value);
  }
  static inline bool Message_Parse(const ::std::string& name,
      Message* value) {
    return Packet_Message_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Packet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Message_2eproto();
  friend void protobuf_AssignDesc_Message_2eproto();
  friend void protobuf_ShutdownFile_Message_2eproto();

  void InitAsDefaultInstance();
  static Packet* default_instance_;
};
// ===================================================================


// ===================================================================

// Packet


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Packet_Message>() {
  return ::Packet_Message_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Message_2eproto__INCLUDED
